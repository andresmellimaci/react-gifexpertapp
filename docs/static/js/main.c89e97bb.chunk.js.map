{"version":3,"sources":["AddCategory.js","GifGridItem.js","helpers/GetGifs.js","GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","GetGifs","category","a","encodeURI","fetch","respuesta","json","data","gifs","map","gif","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,mCACI,sBAAMC,SAZK,SAACC,GAChBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,QCLlBG,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEpC,OACI,sBAAKC,UAAU,OAAf,UACI,qBACAC,IAAKF,EACLG,IAAKJ,IAEL,kCAAKA,EAAL,W,uBCVCK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,0FAC6EO,UAAUF,GADvF,sBAEKG,MAAMR,GAFX,cAEbS,EAFa,gBAGEA,EAAUC,OAHZ,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATvB,kBAaZY,GAbY,4CAAH,sDCIPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAetC,OATAC,qBAAU,WACNjB,EAAQC,GAAUiB,MAAK,SAAAV,GACnBQ,EAAS,CACLT,KAAMC,EACNM,SAAS,SAGlB,CAACb,IAEGc,EDZ0BI,CAAalB,GAAjCU,EAFsB,EAE3BJ,KAAaO,EAFc,EAEdA,QAErB,OACI,qCACA,6BAAKb,IACJa,GAAW,2CACZ,qBAAKjB,UAAU,YAAf,SAEQc,EAAOF,KAAK,SAAAW,GACR,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAI1B,aEXpC2B,EAAe,WAAO,IAAD,EACEzC,mBAAS,CAAC,YADZ,mBAC3B0C,EAD2B,KACf3C,EADe,KAG9B,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAGI2C,EAAWb,KAAK,SAAAR,GACZ,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCXzCsB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.c89e97bb.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleChangeInput = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={submitForm}>\r\n                <input \r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={ handleChangeInput }\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img\r\n            src={url}\r\n            alt={title}\r\n            />\r\n            <p> {title } </p>\r\n        </div>\r\n    )\r\n}\r\n","export const GetGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=gQY0AQTEj0fBcasjHUsNbZVeydFo3QP4&q=${ encodeURI(category) }&limit=10`;\r\n    const respuesta = await fetch(url);\r\n    const {data} = await respuesta.json();\r\n\r\n    const gifs = data.map( gif => {\r\n        return {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            url: gif.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from './hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        {loading && <p>Loading...</p>}\r\n        <div className=\"card-grid\">\r\n            {\r\n                images.map( img => {\r\n                    return <GifGridItem key={img.id} {...img} />\r\n                })\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { GetGifs } from \"../helpers/GetGifs\"\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        GetGifs(category).then(gifs => {\r\n            setState({\r\n                data: gifs,\r\n                loading: false\r\n            })\r\n        })\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\nconst [categories, setCategories] = useState([\"Pokemon\"]);\r\n    \r\n    return (\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr></hr>\r\n            <ol>\r\n            {\r\n               \r\n                categories.map( category => {\r\n                    return <GifGrid key={category} category={category} />\r\n                })\r\n            }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}